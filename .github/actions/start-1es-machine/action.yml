name: "Start 1ES Machine [NEEDS NETPERF REPO CLONED FIRST]"
description: "This action runs multiple steps as a composite action."
inputs:
  matrix:
    description: "The serialized matrix of values to use for the composite action."
    type: string
    required: true
  callback-script-path:
    description: "The script to run in the callback on the server process."
    type: string
    required: true
  syncer_secret:
    description: "Token required to interact with the remote cache"
    required: true
    type: string
runs:
  using: "composite"
  steps:
  - name: Run Python Script to Escape JSON
    if: ${{ env.HAS_PWSH == 'false' }}
    id: escape_json
    run: |
      import json
      matrix = json.loads("""${{ inputs.matrix }}""")
      json_str = json.dumps(matrix).replace('"', '\\"').replace('\n', ' ').replace('\r', ' ')
      print(f"::set-output name=escaped_json::{json_str}")
    shell: python
  - name: Deserialize Matrix
    if: ${{ env.HAS_PWSH == 'false' }}
    run: |
      powershell -Command "./netperfrepo/1es-machine-manager.ps1 -Action 'Deserialize_matrix' -GithubContextInput1 '${{ steps.escape_json.outputs.escaped_json }}'"
    shell: cmd
  - name: Deserialize Matrix
    if: ${{ env.HAS_PWSH == 'true' }}
    run: |
      ./netperfrepo/1es-machine-manager.ps1 -Action 'Deserialize_matrix' -GithubContextInput1 '${{ inputs.matrix }}'
    shell: pwsh
  - name: Disable Windows Defender / Firewall
    if: ${{ env.HAS_PWSH == 'false' && env.OS == 'windows' }}
    run: |
      powershell -Command "./netperfrepo/1es-machine-manager.ps1 -Action 'Disable_Windows_Defender'"
    shell: cmd
  - name: Disable Windows Defender / Firewall
    if: ${{ env.HAS_PWSH == 'true' && env.OS == 'windows' }}
    run: |
      ./netperfrepo/1es-machine-manager.ps1 -Action 'Disable_Windows_Defender'
    shell: pwsh
  - name: (Server) Broadcast IP address
    if: ${{ env.role == 'server' && env.HAS_PWSH == 'false' }}
    run: |
      powershell -Command "./netperfrepo/1es-machine-manager.ps1 -Action 'Broadcast_IP' -GithubContextInput1 '${{ inputs.syncer_secret }}' -GithubContextInput2 '${{ github.run_id }}-${{ github.run_attempt }}' -GithubContextInput3 '${{ env.env_str }}'"
    shell: cmd
  - name: (Server) Broadcast IP address
    if: ${{ env.role == 'server' && env.HAS_PWSH == 'true' }}
    run: |
      ./netperfrepo/1es-machine-manager.ps1 -Action 'Broadcast_IP' -GithubContextInput1 '${{ inputs.syncer_secret }}' -GithubContextInput2 '${{ github.run_id }}-${{ github.run_attempt }}' -GithubContextInput3 '${{ env.env_str }}'
    shell: pwsh
  - name: (Client) Poll for an ip address uploaded by the server, set netperf-peer.
    if: ${{ env.role == 'client' && env.HAS_PWSH == 'false' }}
    run: |
      powershell -Command "./netperfrepo/1es-machine-manager.ps1 -Action 'Poll_IP' -GithubContextInput1 '${{ inputs.syncer_secret }}' -GithubContextInput2 '${{ github.run_id }}-${{ github.run_attempt }}' -GithubContextInput3 '${{ env.env_str }}'"
    shell: cmd
  - name: (Client) Poll for an ip address uploaded by the server, set netperf-peer.
    if: ${{ env.role == 'client' && env.HAS_PWSH == 'true' }}
    run: |
      ./netperfrepo/1es-machine-manager.ps1 -Action 'Poll_IP' -GithubContextInput1 '${{ inputs.syncer_secret }}' -GithubContextInput2 '${{ github.run_id }}-${{ github.run_attempt }}' -GithubContextInput3 '${{ env.env_str }}'
    shell: pwsh
  - name: (Server) Polls for client instructions from remote cache
    if: ${{ env.role == 'server' && env.HAS_PWSH == 'false' }}
    run: |
      powershell -Command "./netperfrepo/1es-machine-manager.ps1 -Action 'Poll_client_instructions' -GithubContextInput1 '${{ inputs.syncer_secret }}' -GithubContextInput2 '${{ github.run_id }}-${{ github.run_attempt }}' -GithubContextInput3 '${{ env.env_str }}' -GithubContextInput4 '${{ inputs.callback-script-path }}'"
    shell: cmd
  - name: (Server) Polls for client instructions from remote cache
    if: ${{ env.role == 'server' && env.HAS_PWSH == 'true' }}
    run: |
      ./netperfrepo/1es-machine-manager.ps1 -Action 'Poll_client_instructions' -GithubContextInput1 '${{ inputs.syncer_secret }}' -GithubContextInput2 '${{ github.run_id }}-${{ github.run_attempt }}' -GithubContextInput3 '${{ env.env_str }}' -GithubContextInput4 '${{ inputs.callback-script-path }}'
    shell: pwsh

