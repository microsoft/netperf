# Copyright (c) Microsoft Corporation
# SPDX-License-Identifier: MIT

# This workflow will download the latest ebpf-for-windows MSI installer and run
# the BPF performance tests. The results will be uploaded as an artifact.

name: ebpf-for-windows

on:
  repository_dispatch:
    types: [run-ebpf]
      # Args: { guid, sha, ref, pr, run_id }

concurrency:
  group: ebpf-${{ github.event.client_payload.pr || github.event.client_payload.sha }}
  cancel-in-progress: true

permissions: read-all

jobs:
  # For automated identification of the workflow.
  name:
    name: For ${{ github.event.client_payload.guid }}
    if: ${{ github.event_name == 'repository_dispatch' }}
    needs: []
    runs-on: ubuntu-20.04
    steps:
    - run: |
        echo "guid: ${{ github.event.client_payload.guid }}"
        echo "sha: ${{ github.event.client_payload.sha }}"
        echo "ref: ${{ github.event.client_payload.ref }}"
        echo "pr: ${{ github.event.client_payload.pr }}"

  windows-perf:
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-2022', 'windows-2019']
        arch: [x64]

    env:
      ARTIFACT_TO_DOWNLOAD: "ebpf-for-windows - MSI installer (Build-x64_Release)"
      ARTIFACT_PATH: "${{ github.workspace }}/local_packages"
      RUN_ID: "${{ github.event.client_payload.run_id }}"
      BPF_PERFORMANCE_URI: "https://github.com/microsoft/bpf_performance/releases/download/v0.0.3/build-Release-windows-2022.zip"
      BPF_PERFORMANCE_HASH: "34E0279711F5450282CBA6FE894E6FB5E21683A801FD60E748717AFCEE63F991"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Fetch latest artifacts
        working-directory: ${{ github.workspace }}
        env:
           GH_TOKEN: ${{ github.token }}
        run: |
          New-Item -Path "${{env.ARTIFACT_PATH}}" -ItemType Directory -Force -ErrorAction SilentlyContinue
          gh run download ${{env.RUN_ID}} -R microsoft/ebpf-for-windows -n "${{env.ARTIFACT_TO_DOWNLOAD}}" -D "${{env.ARTIFACT_PATH}}"

      - name: Install ebpf-for-windows
        working-directory: ${{env.ARTIFACT_PATH}}
        run: |
          Start-Process msiexec.exe -Wait -ArgumentList '/i ebpf-for-windows.msi /quiet /qn /norestart /log install.log ADDLOCAL=ALL'
          echo "C:\Program Files\ebpf-for-windows" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Download BPF performance release
        working-directory: ${{ github.workspace }}
        run: |
          Invoke-WebRequest "${{env.BPF_PERFORMANCE_URI}}" -OutFile bpf_performance.zip
          $hash = Get-FileHash -Algorithm SHA256 -Path "bpf_performance.zip"
          if ($hash.Hash -ne "${{env.BPF_PERFORMANCE_HASH}}")
          {
            Write-Error "Expected ${{env.BPF_PERFORMANCE_HASH}} but got $hash"
            Write-Error "Hash mismatch for bpf_performance.zip"
            exit 1
          }
          Expand-Archive -Path bpf_performance.zip -DestinationPath bpf_performance

      - name: Run BPF performance
        working-directory: ${{ github.workspace }}\bpf_performance
        run: |
          Release\bpf_performance_runner.exe -i tests.yml -e .sys -r | Tee-Object -FilePath $WorkingDirectory\bpf_performance_native.csv

      - name: Upload BPF performance results
        uses: actions/upload-artifact@694cdabd8bdb0f10b2cea11669e1bf5453eed0a6
        with:
          name: bpf_performance_native-${{ matrix.os }}-${{ matrix.arch }}
          path: bpf_performance_native.csv
