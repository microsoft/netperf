name: Schedule Lab Reset

on:
  workflow_call:
    inputs:
      workflowId:
        description: "The ID of the caller workflow"
        required: true
        type: string


permissions: write-all

jobs:
  attempt-lab-reset:
    name: Enqueue Lab Reset Workflow
    runs-on: windows-latest
    steps:
    - name: Enqueue reset workflow. Won't enqueue if there is already a reset workflow in progress.
      run: |
        $headers = @{
          "Accept" = "application/vnd.github+json"
          "Authorization" = "Bearer ${{ secrets.GITHUB_TOKEN }}"
          "X-GitHub-Api-Version" = "2022-11-28"
        }
        $url = "https://api.github.com/repos/microsoft/netperf/actions/runs?status=in_progress"
        Write-Debug "GET $url"
        $activeRuns = ((Invoke-WebRequest -Uri $url -Method GET -Headers $headers).Content | ConvertFrom-Json).workflow_runs
        $not_found = $true
        foreach ($run in $activeRuns) {
          if ($run.name -eq "auto-reset-parent-or-child-lab-machine") {
            Write-Host "Found an existing reset job: $($run.name)"
            $not_found = $false
            break
          }
        }
        if ($not_found) {
          $url = "https://api.github.com/repos/microsoft/netperf/dispatches"
          $body = @{
            event_type = "run-auto-reset-parent-or-child-lab-machine"
            client_payload = @{
              workflow_id = "${{ inputs.workflowId }}"
            }
          } | ConvertTo-Json
          Write-Host "Dispatching with body: $body"
          try {
            Invoke-WebRequest -Uri $url -Headers $headers -Method Post -Body $body
          } catch {
            Write-Host "[DispatchCallee] Failed to dispatch callee: $_"
            exit 1
          }
        }

      shell: pwsh
