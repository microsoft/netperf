name: lab-quic-callee

on:
  repository_dispatch:
    types: [lab-quic-callee]

jobs:
  netperf-register: # TODO: pull this out into its own composite action
    name: Register this VM test run
    runs-on: ubuntu-latest
    steps:
      - name: Print input params
        run: |
          echo "assigned_runner: ${{ github.event.client_payload.assigned_runner }}" 
          echo "unique_env_str: ${{ github.event.client_payload.unique_env_str }}"
          echo "os: ${{ github.event.client_payload.os }}"
          echo "io: ${{ github.event.client_payload.io }}"
          echo "tls: ${{ github.event.client_payload.tls }}"
          echo "arch: ${{ github.event.client_payload.arch }}"
      - name: Upload current workflow ID (unique_env_str = this_workflow_id)
        run: |
          $header = @{
            "secret" = ${{ secrets.NETPERF_SYNCER_SECRET }}
          } 
          $key = "${{ github.event.client_payload.unique_env_str }}_vm_online"
          $value = ${{ github.run_id }}
          try {
            $api = "https://netperfapi.azurewebsites.net/setkeyvalue?key=$key&value=$value"
            Invoke-WebRequest -Uri $api -Headers $header -Method Post
          } catch {
            Write-Host "Failed to alert observer VM online: $_"
            exit 1
          }
  
  #
  # Build Jobs
  #

  build-windows:
    name: Build WinUser
    needs: [netperf-register]
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-2022']
        tls: [schannel] # , openssl, openssl3]
    uses: microsoft/msquic/.github/workflows/build-reuse-win.yml@main
    with:
      os: ${{ matrix.os }}
      tls: ${{ matrix.tls }}
      build: -Perf
      ref: ${{ github.event.client_payload.sha || github.event.client_payload.ref || inputs.ref || 'main' }}

  build-windows-kernel:
    name: Build WinKernel
    needs: []
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-2022']
    uses: microsoft/msquic/.github/workflows/build-reuse-winkernel.yml@main
    with:
      os: ${{ matrix.os }}
      ref: ${{ github.event.client_payload.sha || github.event.client_payload.ref || inputs.ref || 'main' }}

  build-unix:
    name: Build Unix
    needs: []
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: 'ubuntu-20.04'
            tls: 'openssl'
          - os: 'ubuntu-22.04'
            tls: 'openssl3'
    uses: microsoft/msquic/.github/workflows/build-reuse-unix.yml@main
    with:
      os: ${{ matrix.os }}
      tls: ${{ matrix.tls }}
      xdp: ${{ matrix.xdp }}
      build: -Perf
      ref: ${{ github.event.client_payload.sha || github.event.client_payload.ref || inputs.ref || 'main' }}
  

  run-secnetperf:
    name: secnetperf
    needs: [build-windows, build-windows-kernel, build-unix]
    runs-on:
    - self-hosted
    - ${{ github.event.client_payload.assigned_runner }}
    steps:
    - name: Checkout microsoft/msquic
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      with:
        repository: microsoft/msquic
        ref: ${{ github.event.client_payload.sha || github.event.client_payload.ref || inputs.ref || 'main' }}
    - name: Lowercase runner.os
      shell: pwsh
      run: echo "OS=$('${{runner.os}}'.ToLower())" >> $env:GITHUB_ENV
    - name: Download Kernel Drivers
      uses: actions/download-artifact@8caf195ad4b1dee92908e23f56eeb0696f1dd42d
      if: ${{ github.event.client_payload.io == 'wsk' }}
      with:
        name: Release-winkernel-${{ github.event.client_payload.os == 'windows-2025' && 'windows-2022' || github.event.client_payload.os }}-${{ github.event.client_payload.arch }}-${{ github.event.client_payload.tls }}
        path: artifacts
    - name: Download Artifacts
      uses: actions/download-artifact@8caf195ad4b1dee92908e23f56eeb0696f1dd42d
      with:
        name: Release-${{env.OS}}-${{ github.event.client_payload.os == 'windows-2025' && 'windows-2022' || github.event.client_payload.os }}-${{ github.event.client_payload.arch }}-${{ github.event.client_payload.tls }}-Perf
        path: artifacts
    - name: Download Regression.json file
      run: Invoke-WebRequest -Uri "https://raw.githubusercontent.com/microsoft/netperf/sqlite/regression.json" -OutFile "regression.json"
      shell: pwsh
    - name: Download Watermark_Regression.json file
      run: Invoke-WebRequest -Uri "https://raw.githubusercontent.com/microsoft/netperf/sqlite/watermark_regression.json" -OutFile "watermark_regression.json"
      shell: pwsh
    - name: Run secnetperf
      shell: pwsh
      timeout-minutes: 20
      run: |
          $env:netperf_remote_powershell_supported = $true
          ./scripts/secnetperf.ps1 `
          -LogProfile ${{ github.event.client_payload.logs || inputs.logprofile || 'NULL' }} `
          -MsQuicCommit ${{ github.event.client_payload.sha || github.event.client_payload.ref || inputs.ref || 'main' }} `
          -environment ${{ github.event.client_payload.env }} `
          -plat ${{env.OS}} `
          -os ${{ github.event.client_payload.os }} `
          -arch ${{ github.event.client_payload.arch }} `
          -tls ${{ github.event.client_payload.tls }} `
          -io ${{ github.event.client_payload.io }} `
          -filter '${{ github.event.client_payload.filter || inputs.filter || '' }}'
