name: Create Azure VMs


on:
  workflow_dispatch:
    inputs:
      matrix_filename:
        description: 'Matrix of jobs and their respective environments'
        required: false
        default: 'quic_matrix.json'
        type: string
      workflowId:
        description: 'The ID of the caller workflow'
        required: false
        default: 'manual'
        type: string

  workflow_call:
    inputs:
      matrix_filename:
        description: "Matrix of jobs and their respective environments"
        required: false
        default: 'quic_matrix.json'
        type: string
      workflowId:
        description: "The ID of the caller workflow"
        required: true
        type: string
    outputs:
      full-matrix: ${{ steps.generate-full-matrix.outputs.matrix }}
      azure-matrix: ${{ steps.generate-azure-matrix.outputs.matrix }}
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      PERSONAL_ACCESS_TOKEN:
        required: true
      VM_PASSWORD:
        required: true

permissions: write-all

jobs:
  manage-and-create-runners:
    name: Manage Runners and Create Azure VMs
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install Latest Az PowerShell Module
      shell: pwsh
      run: |
        Install-Module -Name Az -Force -AllowClobber -Repository PSGallery
        Update-Module Az -Force
        Get-Module 'Az' | where {([string]($_.Version)).StartsWith('9.3.0')} | Remove-Module
        Get-Module -Name Az -ListAvailable
    - name: Login to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        enable-AzPSSession: true
    - name: Run manage-azure-vms.ps1
      run: ./.github/workflows/manage-azure-vms.ps1 -GithubPatToken ${{ secrets.PERSONAL_ACCESS_TOKEN }} -MatrixFileName ${{ inputs.matrix_filename }}
      shell: pwsh
    - name: Generate registration token
      id: generate-token
      run: |
        TOKEN=$(curl -X POST -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" "https://api.github.com/repos/microsoft/netperf/actions/runners/registration-token" | jq -r .token) && echo "::add-mask::$TOKEN" && echo "REGISTRATION_TOKEN=$TOKEN" >> $GITHUB_OUTPUT
      shell: bash
    - name: Create Azure VMs
      shell: pwsh
      run: |
        ./.github/workflows/create-azure-machines.ps1 `
          -Password ${{ secrets.VM_PASSWORD }} `
          -GitHubToken ${{ steps.generate-token.outputs.REGISTRATION_TOKEN }} `
          -WorkflowId ${{ inputs.workflowId }}
    - id: generate-full-matrix
      run: echo "matrix=$(jq -c '.' ./.github/workflows/processed-matrix.json)" >> $GITHUB_OUTPUT
      shell: bash
    - id: generate-azure-matrix
      run: echo "matrix=$(jq -c '.' ./.github/workflows/azure-matrix.json)" >> $GITHUB_OUTPUT
      shell: bash
