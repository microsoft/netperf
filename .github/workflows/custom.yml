name: Custom Tasks

on:
  workflow_dispatch:

permissions: write-all

jobs:
  create-runner:
    name: Create Runner
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install Latest Az PowerShell Module
      shell: pwsh
      run: |
        Install-Module -Name Az -Force -AllowClobber -Repository PSGallery
        Update-Module Az -Force
        Get-Module 'Az' | where {([string]($_.Version)).StartsWith('9.3.0')} | Remove-Module
        Get-Module -Name Az -ListAvailable
    - name: Login to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        enable-AzPSSession: true
    - name: Create Azure VMs
      shell: pwsh
      run: |
        ./.github/workflows/create-azure-machines.ps1 `
          -Os windows-2022 `
          -VMSize Experimental_Boost4 `
          -VMSuffix1 c1 `
          -VMSuffix2 c2 `
          -GitHubToken ${{ secrets.GITHUB_TOKEN }} `
          -Password ${{ secrets.VM_PASSWORD }}

  test-runner:
    name: Test Runner
    needs: [create-runner]
    runs-on:
    - self-hosted
    - os-windows-2022
    - azure-ex
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Test Runner
      shell: pwsh
      run: |
        Write-Host 'Connecting to netperf-peer'
        $Session = New-PSSession -ComputerName "netperf-peer" -ConfigurationName PowerShell.7
        ipconfig /all
        Invoke-Command -Session $Session -ScriptBlock {
          ipconfig /all
        }

  delete-runner:
    name: Delete Runner
    needs: [test-runner]
    runs-on: windows-latest
    if: ${{ always() }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Login to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        enable-AzPSSession: true
    - name: Delete Azure VMs
      shell: pwsh
      run: |
        Write-Host "Deleting ex-windows-c1"
        try {
          Get-AzResource -ResourceGroupName "netperf-ex" `
            | where {$_.Name.StartsWith("ex-windows-c1") } `
            | Remove-AzResource -Force
        } catch {}
        Write-Host "Deleting ex-windows-c2"
        try {
          Get-AzResource -ResourceGroupName "netperf-ex" `
            | where {$_.Name.StartsWith("ex-windows-c2") } `
            | Remove-AzResource -Force
        } catch {}
