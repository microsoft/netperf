name: Custom Tasks

on:
  workflow_dispatch:
    inputs:
      os:
        description: 'Windows OS Version'
        required: false
        default: "2022"
        type: choice
        options:
          - "2025"
          - "2022"
          - "2019"

permissions: write-all

jobs:
  testjob:
    strategy:
      matrix:
        role: ["client", "server"]
    runs-on: [self-hosted, 1ES.Pool=netperf-aztestpool]
    steps:
      - name: Print Role
        run: Write-Host "Role; ${{ matrix.role }}"
        shell: pwsh

      - name: Print networking information
        run: Get-NetIpAddress -AddressFamily IPv4
        shell: pwsh

      - name: (Server) Upload IP address to shared cache
        if: ${{ matrix.role == 'server' }}
        run: |
          $ipAddress = (Get-NetIpAddress -AddressFamily IPv4).IpAddress
          Invoke-WebRequest -Uri https://netperfapiwebapp.azurewebsites.net/setkeyvalue?key=${{ github.run_id }}_ipaddress&value=$ipAddress
        shell: pwsh

      - name: (Client) Poll for an ip address uploaded by the server
        if: ${{ matrix.role == 'client' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Ensure this is set in your repository's secrets
        run: |
          $found = $false
          $uri = "https://netperfapiwebapp.azurewebsites.net/getkeyvalue?key=${{ github.run_id }}_ipaddress"
          do {
            Write-Output "Checking for ip address..."
            try {
              $Response = Invoke-WebRequest -Uri $uri
              if (!($Response.StatusCode -eq 200)) {
                throw "Failed to get ip address. Status code: $($Response.StatusCode)"
              }
              $ipAddress = $Response.Content
              Write-Output "Ip Address found: $ipAddress"
              $found = $true
            }
            catch {
              Write-Output "Ip Address not found: $_"
              Start-Sleep -Seconds 30
            }
          } while (-not $found)

          Write-Host "Try pinging the server"
          ping $ipAddress -n 5
        shell: pwsh

      - name: (Client) Upload ACK to shared cache
        if: ${{ matrix.role == 'client' }}
        run: |
          Invoke-WebRequest -Uri https://netperfapiwebapp.azurewebsites.net/setkeyvalue?key=${{ github.run_id }}_ack&value=ack
        shell: pwsh

      - name: (Server) Server polls for an ACK so it can clean up
        if: ${{ matrix.role == 'server' }}
        run: |
          $found = $false
          $uri = "https://netperfapiwebapp.azurewebsites.net/getkeyvalue?key=${{ github.run_id }}_ack"
          do {
            Write-Output "Checking for ACK..."
            try {
              $Response = Invoke-WebRequest -Uri $uri
              if ($Response.StatusCode -neq 200) {
                throw "Failed to get ACK. Status code: $($Response.StatusCode)"
              }
              $ack = $Response.Content
              Write-Output "ACK found: $ack"
              $found = $true
            }
            catch {
              Write-Output "ACK not found: $_"
              Start-Sleep -Seconds 30
            }
          } while (-not $found)
        shell: pwsh
