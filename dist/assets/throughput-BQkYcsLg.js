import{r as h,j as e,H as X,T as _,B as m}from"./index-BxBmznGm.js";import{u as F,F as x,I as b,S as $,M as p,G}from"./app-website-visits-NnzyzN2Z.js";import{G as H}from"./graph-view-OzppivHS.js";import{C as M}from"./Container-CrFMpulY.js";let T=!1;document.addEventListener("mousedown",function(){T=!0});document.addEventListener("mouseup",function(){T=!1});function c(r,a,d,l){if(!(r in a))return alert(`Could not find ${r} in data`),console.error(`Could not find ${r} in data`),[];const n=a[r];let i=[];for((l in n)?i=n[l].data.slice().reverse():console.log("OLD KEY DOES NOT EXIST",l),(d in n)?i=i.concat(n[d].data.slice().reverse()):console.log("NEW KEY DOES NOT EXIST",d);i.length>20;)i.shift();return i}function A(){const r="https://raw.githubusercontent.com/microsoft/netperf/deploy/historical_throughput_page.json",{data:a}=F(r);let d=e.jsx("div",{});const[l,E]=h.useState("azure"),[n,i]=h.useState("windows-2022-x64"),[u,L]=h.useState("ubuntu-20.04-x64"),[t,S]=h.useState("up");if(a){let o=c(`${n}-${l}-iocp-schannel`,a,`scenario-${t}load-tcp`,`tput-${t}-tcp`),f=c(`${u}-${l}-epoll-openssl`,a,`scenario-${t}load-tcp`,`tput-${t}-tcp`),O=Array.from({length:Math.max(f.length,f.length)},(s,V)=>V);O.reverse();const g=c(`${n}-${l}-iocp-schannel`,a,`scenario-${t}load-tcp`,`tput-${t}-tcp`),j=c(`${n}-${l}-iocp-schannel`,a,`scenario-${t}load-quic`,`tput-${t}-quic`),w=c(`${u}-${l}-epoll-openssl`,a,`scenario-${t}load-tcp`,`tput-${t}-tcp`),C=c(`${u}-${l}-epoll-openssl`,a,`scenario-${t}load-quic`,`tput-${t}-quic`),v=c(`${n}-${l}-xdp-schannel`,a,`scenario-${t}load-quic`,`tput-${t}-quic`),I=c(`${n}-${l}-wsk-schannel`,a,`scenario-${t}load-quic`,`tput-${t}-quic`),y=g.map(s=>s[0]),Q=j.map(s=>s[0]),W=w.map(s=>s[0]),k=C.map(s=>s[0]),R=v.map(s=>s[0]),z=I.map(s=>s[0]);d=e.jsx(H,{title:`${t==="up"?"Upload":"Download"} Throughput`,subheader:`Tested using ${n}, ${u}, taking the max of 3 runs. `,labels:O,map:s=>(T&&(window.location.href=`https://github.com/microsoft/msquic/commit/${o[s][1]}`),`<div style = "margin: 10px">
            <p> <b> Build date: </b> ${o[s][3]} </p>
            <p> <b> Specific Windows OS version this test ran on: </b> ${o[s][2]} </p>
            <p> <b> Specific Linux OS version this test ran on: </b> ${f[s][2]} </p>
            <p> <b> Commit hash: </b> <a href="google.com"> ${o[s][1]} </a> </p>
            <p> <b> TCP + iocp: </b> ${g[s]&&g[s][0]}, </p>
            <p> <b> QUIC + iocp: </b> ${j[s]&&j[s][0]} </p>
            <p> <b> TCP + epoll: </b> ${w[s]&&w[s][0]} </p>
            <p> <b> QUIC + epoll: </b> ${C[s]&&C[s][0]},
            <b> QUIC + winXDP: </b> ${v[s]&&v[s][0]},
            <b> QUIC + wsk: </b> ${I[s]&&I[s][0]} </p>
          </div>`),series:[{name:"TCP + iocp",type:"line",fill:"solid",data:y},{name:"QUIC + iocp",type:"line",fill:"solid",data:Q},{name:"TCP + epoll",type:"line",fill:"solid",data:W},{name:"QUIC + epoll",type:"line",fill:"solid",data:k},{name:"QUIC + winXDP",type:"line",fill:"solid",data:R},{name:"QUIC + wsk",type:"line",fill:"solid",data:z}],options:{markers:{size:5}}})}const U=o=>{E(o.target.value)},D=o=>{i(o.target.value)},P=o=>{L(o.target.value)},q=o=>{S(o.target.value)};return e.jsxs(e.Fragment,{children:[e.jsx(X,{children:e.jsx("title",{children:" Netperf "})}),e.jsxs(M,{maxWidth:"xl",children:[e.jsx(_,{variant:"h3",sx:{mb:5},children:"Detailed Throughput"}),e.jsxs("div",{style:{display:"flex"},children:[e.jsx(m,{sx:{},children:e.jsxs(x,{children:[e.jsx(b,{id:"demo-simple-select-label",children:"Context"}),e.jsxs($,{labelId:"demo-simple-select-label",id:"demo-simple-select",value:l,label:"Context",onChange:U,defaultValue:0,children:[e.jsx(p,{value:"azure",children:"azure"}),n!=="windows-2025-x64"&&e.jsx(p,{value:"lab",children:"lab"})]})]})}),e.jsx(m,{sx:{minWidth:120,marginLeft:"10px"},children:e.jsxs(x,{children:[e.jsx(b,{id:"demo-simple-select-label",children:"Windows Environment"}),e.jsxs($,{labelId:"demo-simple-select-label",id:"demo-simple-select",value:n,label:"Windows Environment",onChange:D,defaultValue:0,children:[e.jsx(p,{value:"windows-2022-x64",children:"windows-2022-x64"}),l==="azure"&&e.jsx(p,{value:"windows-2025-x64",children:"windows-2025-x64"})]})]})}),e.jsx(m,{sx:{minWidth:120,marginLeft:"10px"},children:e.jsxs(x,{children:[e.jsx(b,{id:"demo-simple-select-label",children:"Linux Environment"}),e.jsx($,{labelId:"demo-simple-select-label",id:"demo-simple-select",value:u,label:"Linux Environment",onChange:P,defaultValue:0,children:e.jsx(p,{value:"ubuntu-20.04-x64",children:"ubuntu-20.04-x64"})})]})}),e.jsx(m,{sx:{minWidth:120,marginLeft:"10px"},children:e.jsxs(x,{children:[e.jsx(b,{id:"demo-simple-select-label",children:"Test type"}),e.jsxs($,{labelId:"demo-simple-select-label",id:"demo-simple-select",value:t,label:"Upload or download",onChange:q,defaultValue:0,children:[e.jsx(p,{value:"up",children:"Upload - 1 connection, 12 seconds per run"}),e.jsx(p,{value:"down",children:"Download - 1 connection, 12 seconds per run"})]})]})})]}),e.jsx("br",{}),e.jsx(G,{container:!0,spacing:3,children:d})]})]})}export{A as default};
